name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    
jobs:
  realizar_tests:
#     needs: sonarqube
      runs-on: self-hosted
      steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn --batch-mode verify

  build:
    name: Build and analyze
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

#  sonarqube:
#      runs-on: self-hosted
#      steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: 17
#          distribution: 'zulu' # Alternative distribution options are available.
#      - name: Cache SonarQube packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Cache Maven packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#      - name: Build and analyze
#        env:
#          SONAR_TOKEN: sqp_17b8b55daf16dd0cedb541f06b5fd6f51ee0ee79
#          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#        run: mvn -B clean install -DskipTests=true org.sonarsource.scanner.maven:sonar-maven-plugin:5.0.0.4389:sonar -Dsonar.projectKey=BuenasPracticas2 -Dsonar.projectName='BuenasPracticas2'


  arrancar_en_servidor_de_desarrollo:
    needs: realizar_tests
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v4
    - name: Build the Docker image
      run: docker compose -f compose-desarrollo.yaml up -d
      
